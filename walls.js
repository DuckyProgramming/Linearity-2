class wall extends entity{
    constructor(layer,x,y,type,width,height,id){
        super(layer,x,y)
        this.type=type
        this.width=width
        this.height=height
        this.id=id
        this.collide=[entities.players]
        if(this.type<=0){
            this.complete = false;
            this.completeAnim = 0;
            this.screen = screens[-this.type]
            this.details = {active:[],fade:[]}
            this.image = createGraphics(this.screen[0].length*20,this.screen.length*20)
            setupLayer(this.image)
            this.setupScreen(this.screen);
            this.genImage();
        }
        switch(this.type){
            case 1:
                this.ellipse=[]
                this.control=[]
                for(e=0,le=this.width/80;e<le;e++){
                    this.ellipse.push([])
                    this.control.push([])
                    for(f=0,lf=this.height/80;f<lf;f++){
                        this.ellipse[e].push([])
                        this.control[e].push(random(0,1))
                        for(g=0;g<4;g++){
                            this.ellipse[e][f].push([random(15,25),random(15,25),random(60,70)])
                        }
                    }
                }
            break
            case 3:
                this.width*=0.5
            break
            case 4:
                this.height*=0.5
            break
        }
    }
    setupScreen(main){
        for(e=0,le=main.length;e<le;e++){
            this.details.active.push([])
            this.details.fade.push([])
            for(f=0,lf=main[f].length;f<lf;f++){
                this.details.active[e].push(0)
                this.details.fade[e].push(0)
            }
        }
    }
    genImage(){
        for(e=0,le=this.screen.length;e<le;e++){
            for(f=0,lf=this.screen[e].length;f<lf;f++){
                if(legalMove(this.screen[e][f])){
                    this.image.stroke(0)
                    this.image.strokeWeight(3)
                    if(e<this.screen.length-1&&legalMove(this.screen[e+1][f])){
                        this.image.line(10+f*20,10+e*20,10+f*20,30+e*20)
                    }
                    if(f<this.screen[e].length-1&&legalMove(this.screen[e][f+1])){
                        this.image.line(10+f*20,10+e*20,30+f*20,10+e*20)
                    }
                    if(this.screen[e][f]=='O'){
                        this.image.strokeWeight(12)
                        this.image.point(10+f*20,10+e*20)
                    }
                    if(this.screen[e][f]=='o'){
                        this.image.strokeWeight(8)
                        this.image.point(10+f*20,10+e*20)
                    }
                }
            }
        }
        for(e=0,le=this.screen.length;e<le;e++){
            for(f=0,lf=this.screen[e].length;f<lf;f++){
                if(legalMove(this.screen[e][f])){
                    this.image.strokeWeight(4)
                    if(e<this.screen.length-1&&e%2==0&&legalMove(this.screen[e+1][f])&&legalMove(this.screen[e+2][f])){
                        this.image.stroke(255,200,225,min(this.details.fade[e][f],this.details.fade[e+1][f],this.details.fade[e+2][f]))
                        this.image.line(10+f*20,10+e*20,10+f*20,50+e*20)
                    }
                    if(f<this.screen[e].length-1&&f%2==0&&legalMove(this.screen[e][f+1])&&legalMove(this.screen[e][f+2])){
                        this.image.stroke(255,200,225,min(this.details.fade[e][f],this.details.fade[e][f+1],this.details.fade[e][f+2]))
                        this.image.line(10+f*20,10+e*20,50+f*20,10+e*20)
                    }
                    if(this.screen[e][f]=='O'){
                        this.image.stroke(255,200,225,this.details.fade[e][f])
                        this.image.strokeWeight(13)
                        this.image.point(10+f*20,10+e*20)
                    }
                    if(this.screen[e][f]=='o'){
                        this.image.stroke(255,200,225,this.details.fade[e][f])
                        this.image.strokeWeight(9)
                        this.image.point(10+f*20,10+e*20)
                    }
                }
            }
        }
        this.image.noStroke()
        for(e=0,le=this.screen.length;e<le;e++){
            for(f=0,lf=this.screen[e].length;f<lf;f++){
                switch(this.screen[e][f]){
                    case '*':
                        this.image.fill(200)
                        regPoly(this.image,10+f*20,10+e*20,6,4,30)
                    break
                    case '1':
                        this.image.fill(255,50,100)
                        regTriangle(this.image,10+f*20,10+e*20,5,-30)
                    break
                    case '2':
                        this.image.fill(255,50,100)
                        regTriangle(this.image,6+f*20,10+e*20,5,-30)
                        regTriangle(this.image,14+f*20,10+e*20,5,-30)
                    break
                    case '3':
                        this.image.fill(255,50,100)
                        regTriangle(this.image,2+f*20,10+e*20,5,-30)
                        regTriangle(this.image,10+f*20,10+e*20,5,-30)
                        regTriangle(this.image,18+f*20,10+e*20,5,-30)
                    break
                }
            }
        }
    }
    display(){
        this.layer.noStroke()
        this.layer.translate(this.position.x,this.position.y)
        if(this.type<=0){
            this.layer.stroke(40+this.completeAnim*215,40+this.completeAnim*165,40+this.completeAnim*185)
            this.layer.strokeWeight(3)
            this.layer.fill(255,100,150)
            this.layer.rect(0,0,60,60,3)
            this.layer.image(this.image,-25,-25,50,50)
        }
        switch(this.type){
            case 1:
                this.layer.fill(250,230,240)
                for(e=0,le=this.ellipse.length;e<le;e++){
                    for(f=0,lf=this.ellipse[e].length;f<lf;f++){
                        this.layer.translate(-this.width/2+40+e*80,-this.height/2+40+f*80)
                        this.layer.rotate(this.control[e][f]*360)
                        for(g=0,lg=this.ellipse[e][f].length;g<lg;g++){
                            this.layer.ellipse(this.ellipse[e][f][g][0]*((g%2)*2-1),this.ellipse[e][f][g][1]*(floor(g/2)*2-1),this.ellipse[e][f][g][2],this.ellipse[e][f][g][2])
                        }
                        this.layer.rotate(this.control[e][f]*-360)
                        this.layer.translate(this.width/2-40-e*80,this.height/2-40-f*80)
                    }
                }
            break
            case 2:
                this.layer.fill(245,250,255)
                this.layer.stroke(170,110,135)
                this.layer.strokeWeight(6)
                this.layer.rect(0,0,this.width,this.height,6)
            break
            case 3: case 4:
                this.layer.fill(245,250,255)
                this.layer.stroke(170,110,135)
                this.layer.strokeWeight(6)
                this.layer.rect(0,0,this.width,this.height)
            break
        }
        if(dev.box){
            this.layer.noFill()
            this.layer.stroke(0,255,0)
            this.layer.strokeWeight(3)
            this.layer.rect(0,0,this.width,this.height)
        }
        this.layer.translate(-this.position.x,-this.position.y)
    }
    update(){
        if(this.type<=0&&this.complete&&this.completeAnim<1){
            this.completeAnim=round(this.completeAnim*20+1)/20
        }
        for(e=0,le=this.collide.length;e<le;e++){
            for(f=0,lf=this.collide[e].length;f<lf;f++){
                if(circleInsideBox(this,this.collide[e][f])){
					this.collide[e][f].position.x=circleCollideBox(this,this.collide[e][f]).x
					this.collide[e][f].position.y=circleCollideBox(this,this.collide[e][d]).y
                    this.collide[e][f].speed*=0.9
				}
            }
        }
    }
}